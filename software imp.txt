/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "xparameters.h"
#include "platform.h"
#include "xil_printf.h"
#include "xtime_l.h"

#define TIMEDIFF(t1,t2) (t2 - t1)
#define MILLISECONDS(t) (1000.0 * t / COUNTS_PER_SECOND)

XTime start, end;

// Start a test
void startTest() {
	XTime_GetTime(&start);
}
// End a test
void endTest() {
	XTime_GetTime(&end);
	double time_curr = TIMEDIFF(start, end);
	double msec = MILLISECONDS(time_curr);
	int cycles= (int)time_curr;
	printf("\nRun-time cycles = %d cycles...",cycles);

}
int gcd1(int a, int b)
{
	startTest();
	int a1,b1;
      if (a>=b){ a1=a; b1=b;}
        else {a1=b; b1=a;}
        int rem;
        while (b1!=0)
        {
            rem= a1-b1*(a1/b1);
            a1=b1;
            b1=rem;
        }
        endTest();
     return a1;
}

int main()
{
    init_platform();

    print("\nHello World\n");




     int g= gcd1(7854,4746);
     printf("\nnumber1: %d", 7854);
     printf("\nnumber2: %d", 4746);
     printf("\nGCD: %d\n",g);

     g= gcd1(106,0);

     printf("\nnumber1: %d", 106);
     printf("\nnumber2: %d", 0);
     printf("\nGCD: %d\n",g);

     g= gcd1(106,53);

     printf("\nnumber1: %d", 106);
     printf("\nnumber2: %d", 53);
     printf("\nGCD: %d\n",g);

     g=gcd1(68,119);
     printf("\nnumber1: %d", 68);
     printf("\nnumber2: %d", 119);
     printf("\nGCD: %d\n",g);
 cleanup_platform();
    return 0;

}

